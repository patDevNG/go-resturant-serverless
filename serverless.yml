# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: my-resturant-serverless
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'
plugins:
  - serverless-offline
provider:
  name: aws
  runtime: go1.x
custom:
  serverless-offline:
    host: 0.0.0.0
    httpPort: 5000
package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  hello:
    handler: bin/hello
    events:
      - http:
          path: /hello
          method: get
  world:
    handler: bin/world
    timeout: 10
    events:
      - http:
          path: /world
          method: get
  getFoods:
    handler: bin/food/getFoods
    events:
      - http:
          path: /food
          method: get
          request:
            parameters:
              querystrings:
                recordPerPage: true
                page: true
                startIndex: true

  createMenu:
    handler: bin/food/createMenu
    events:
      - http:
          path: /menu
          method: post  
  updateMenu:
    handler: bin/food/updateMenu
    events:
      - http:
          path: /menu/{menuId}
          method: patch 
  getMenu:
    handler: bin/food/getMenu
    events:
      - http:
          path: /menu/{menuId}
          method: get
  getMenus:
    handler: bin/food/getMenus
    events:
      - http:
          path: /menu
          method: get  
  createTable:
    handler: bin/table/createTable
    events:
      - http:
          path: /table
          method: post   
  getTable:
    handler: bin/table/getTable
    events:
      - http:
          path: /table/{tableId}
          method: get           

  getTables:
    handler: bin/table/getTables
    events:
      - http:
          path: /table
          method: get 
  updateTable:
    handler: bin/table/updateTable
    events:
      - http:
          path: /table/{tableId}
          method: patch 
  createFood:
    handler: bin/food/createFood
    events:
      - http:
          path: /food
          method: post 
  getFood:
    handler: bin/food/getFood
    events:
      - http:
          path: /food/{foodId}
          method: get 
  createOrder:
    handler: bin/order/createOrder
    events:
      - http:
          path: /order
          method: post  
  getOrder:
    handler: bin/order/getOrder
    events:
      - http:
          path: /order/{orderId}
          method: get 

  getOrders:
    handler: bin/order/getOrders
    events:
      - http:
          path: /order
          method: get    
  createOrderItem:
    handler: bin/orderItem/createOrderItem
    events:
      - http:
          path: /orderItem
          method: post 
  getOrderItem:
    handler: bin/orderItem/getOrderItem
    events:
      - http:
          path: /orderItem/{orderItemId}
          method: get   
  getOrderItems:
    handler: bin/orderItem/getOrderItems
    events:
      - http:
          path: /orderItem
          method: get 
  createInvoice:
    handler: bin/invoice/createInvoice
    events:
      - http:
          path: /invoice
          method: post 
  getInvoice:
    handler: bin/invoice/getInvoice
    events:
      - http:
          path: /invoice/{invoiceId}
          method: get          
  getInvoices:
    handler: bin/invoice/getInvoices
    events:
      - http:
          path: /invoice
          method: get
